{
  "swagger": "2.0",
  "info": {
    "version": "v0.1.0.564",
    "title": "Coyote API",
    "description": "# Introduction\r\n\r\nWelcome to Coyote's API Documentation. You can access our API endpoints, such as Tracking Updates for shipment details,\r\nor Spot Quotes to get rates for high volume shippers who need to quote in bulk. If you have immediate questions or need\r\nmore info, please reach out to your Coyote sales rep or\r\nemail us at apimanagement@coyote.com.\r\n\r\nIf you're an existing Coyote customer and want to utilize the API suite, you can request an API key through your Coyote\r\nsales rep.\r\n\r\nBy accessing or using the Coyote APIs or the API Technical Documentation for the Coyote APIs, you are agreeing to the [Coyote API Terms of Use](https://www.coyote.com/terms-privacy/#api).\r\n\r\n## Authentication\r\n\r\nOnce you've received your API key, you can now access the sandbox environment where you can begin to work with the endpoints.\r\n\r\nTo retrieve a token, POST to api.coyote.com/connect/token, specifying the following token request parameters:\r\n\r\nclient_id (provided by integrations team)\r\nclient_secret (provided by integrations team)\r\nscope (ExternalApi)\r\ngrant_type (client_credentials)\r\n\r\nExample:\r\n\r\n```\r\nPOST /connect/token\r\n\r\n    client_id=client1&\r\n    client_secret=api_key&\r\n    grant_type=client_credentials&\r\n    scope=ExternalApi\r\n```\r\n\r\nPass your token as a bearer token in an Authorization header.\r\n\r\nOf note:\r\nThe API is organized around REST. All requests should be made over SSL. All API request and response bodies are encoded in JSON. Token requests must be form-urlencoded.\r\n\r\nTo test your requests and responses, use api-sandbox.coyote.com with your sandbox API key.\r\n",
    "contact": {
      "name": "API Management",
      "email": "apimanagement@coyote.com"
    },
    "x-logo": {
      "url": "https://coyote.com/wp-content/uploads/2020/02/APILogo-transparent.png",
      "altText": "Coyote"
    }
  },
  "paths": {
    "/api/v1/AvailableLoads/{loadId}": {
      "get": {
        "tags": ["AvailableLoads"],
        "summary": "Gets available load details",
        "description": "Retrieves all of the current details for given load, assuming the provided load are still available.",
        "operationId": "GetAvailableLoadById",
        "consumes": [],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "The requested load id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Load successfully retrieved and returned",
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.AvailableLoad"
            },
            "examples": {
              "application/json": {
                "loadId": 194536334,
                "loadDetails": {
                  "rate": { "value": 654.0, "currencyType": "USD" },
                  "mode": "TL",
                  "equipment": {
                    "equipmentHeight": { "value": 0.0, "unit": "Feet" },
                    "equipmentLength": { "value": 53.0, "unit": "Feet" },
                    "equipmentType": "V",
                    "equipmentWidth": { "value": 20.0, "unit": "Feet" }
                  },
                  "loadDistance": { "value": 1500.0, "unit": "Miles" },
                  "weight": { "value": 1800.0, "unit": "Pounds" },
                  "temperatureSettings": {
                    "preCoolTemperature": null,
                    "maximumTemperature": {
                      "value": 12.0,
                      "unit": "Fahrenheit"
                    },
                    "minimumTemperature": {
                      "value": 20.0,
                      "unit": "Fahrenheit"
                    }
                  },
                  "loadAttributes": {
                    "airRide": false,
                    "blind": false,
                    "bondedCarrier": false,
                    "borderCrossingByCoyote": false,
                    "borderCrossingByCustomer": false,
                    "coyoteGo": false,
                    "crossBorderMexico": false,
                    "ctpat": false,
                    "disasterRelief": false,
                    "doubleBlind": false,
                    "doubleTrailer": false,
                    "drayage": false,
                    "duraplate": false,
                    "englishSpeaking": false,
                    "exitPass": false,
                    "fast": false,
                    "fdaClearanceRequired": false,
                    "floodRelief": false,
                    "govt": false,
                    "guaranteed": false,
                    "haccp": false,
                    "hazmatEndorsement": false,
                    "hvhr": false,
                    "hvhrPlus": false,
                    "intraMexico": false,
                    "liquor": false,
                    "neec": false,
                    "noCameraPhonePhotosOfPaperwork": false,
                    "overDimension": false,
                    "palletJack": false,
                    "partialLoad": false,
                    "pipOrPep": false,
                    "powerOnly": false,
                    "ppe": false,
                    "protectFromFreeze": false,
                    "repairReceiptRequiredForBreakdowns": false,
                    "seal": true,
                    "secondaryBorderInspection": false,
                    "tankerEndorsement": false,
                    "tcr": false,
                    "team": false,
                    "techTrackingRequired": false,
                    "tradeShow": false,
                    "trailerControl": false,
                    "transloadByCoyote": false,
                    "transloadByCustomer": false,
                    "tripleTrailer": false,
                    "twic": false,
                    "uiia": false
                  }
                },
                "stops": [
                  {
                    "sequence": 1,
                    "stopType": "Pickup",
                    "facility": {
                      "name": null,
                      "address": {
                        "line1": "16005 WAHRMAN ST",
                        "line2": null,
                        "line3": null,
                        "postalCode": "48174-9725",
                        "cityName": "Romulus",
                        "stateProvinceCode": "OH",
                        "countryCode": "US"
                      },
                      "geoCoordinates": {
                        "latitude": 40.246281,
                        "longitude": -82.868742
                      }
                    },
                    "appointment": {
                      "facilityOpenDateTimeUtc": null,
                      "facilityCloseDateTimeUtc": null,
                      "appointmentStartDateTimeUtc": "2020-06-04T19:07:01.4762473Z",
                      "appointmentEndDateTimeUtc": "2020-06-04T19:07:01.476249Z"
                    },
                    "stopDetails": null
                  },
                  {
                    "sequence": 2,
                    "stopType": "Delivery",
                    "facility": {
                      "name": null,
                      "address": {
                        "line1": "131 State Route 3",
                        "line2": null,
                        "line3": null,
                        "postalCode": "43074",
                        "cityName": "Sunbury",
                        "stateProvinceCode": "OH",
                        "countryCode": "US"
                      },
                      "geoCoordinates": {
                        "latitude": 41.246281,
                        "longitude": -81.868742
                      }
                    },
                    "appointment": {
                      "facilityOpenDateTimeUtc": null,
                      "facilityCloseDateTimeUtc": null,
                      "appointmentStartDateTimeUtc": "2020-06-04T19:07:01.4762502Z",
                      "appointmentEndDateTimeUtc": "2020-06-04T19:07:01.4762509Z"
                    },
                    "stopDetails": null
                  }
                ]
              }
            }
          },
          "201": {
            "description": "Load do not exist or are not available anymore"
          },
          "400": { "description": "Invalid request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/api/v1/AvailableLoads/search": {
      "post": {
        "tags": ["AvailableLoads"],
        "summary": "Search available loads",
        "description": "Given a set of query inputs, Coyote will return the list of all available loads that match the inputs provided in the request.",
        "operationId": "GetAvailableLoads",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json",
          "application/bson"
        ],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "loadRequest",
            "in": "body",
            "description": "Load request query object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.AvailableLoadsRequest"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Requested page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Requested page size",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Loads successfully retrieved and returned",
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.PagedAvailableLoads"
            },
            "examples": {
              "application/json": {
                "loads": [
                  {
                    "loadId": 194536334,
                    "loadDetails": {
                      "rate": { "value": 654.0, "currencyType": "USD" },
                      "mode": "TL",
                      "equipment": {
                        "equipmentHeight": { "value": 0.0, "unit": "Feet" },
                        "equipmentLength": { "value": 53.0, "unit": "Feet" },
                        "equipmentType": "V",
                        "equipmentWidth": { "value": 20.0, "unit": "Feet" }
                      },
                      "loadDistance": { "value": 1500.0, "unit": "Miles" },
                      "weight": { "value": 1800.0, "unit": "Pounds" },
                      "temperatureSettings": {
                        "preCoolTemperature": null,
                        "maximumTemperature": {
                          "value": 12.0,
                          "unit": "Fahrenheit"
                        },
                        "minimumTemperature": {
                          "value": 20.0,
                          "unit": "Fahrenheit"
                        }
                      },
                      "loadAttributes": {
                        "airRide": false,
                        "blind": false,
                        "bondedCarrier": false,
                        "borderCrossingByCoyote": false,
                        "borderCrossingByCustomer": false,
                        "coyoteGo": false,
                        "crossBorderMexico": false,
                        "ctpat": false,
                        "disasterRelief": false,
                        "doubleBlind": false,
                        "doubleTrailer": false,
                        "drayage": false,
                        "duraplate": false,
                        "englishSpeaking": false,
                        "exitPass": false,
                        "fast": false,
                        "fdaClearanceRequired": false,
                        "floodRelief": false,
                        "govt": false,
                        "guaranteed": false,
                        "haccp": false,
                        "hazmatEndorsement": false,
                        "hvhr": false,
                        "hvhrPlus": false,
                        "intraMexico": false,
                        "liquor": false,
                        "neec": false,
                        "noCameraPhonePhotosOfPaperwork": false,
                        "overDimension": false,
                        "palletJack": false,
                        "partialLoad": false,
                        "pipOrPep": false,
                        "powerOnly": false,
                        "ppe": false,
                        "protectFromFreeze": false,
                        "repairReceiptRequiredForBreakdowns": false,
                        "seal": true,
                        "secondaryBorderInspection": false,
                        "tankerEndorsement": false,
                        "tcr": false,
                        "team": false,
                        "techTrackingRequired": false,
                        "tradeShow": false,
                        "trailerControl": false,
                        "transloadByCoyote": false,
                        "transloadByCustomer": false,
                        "tripleTrailer": false,
                        "twic": false,
                        "uiia": false
                      }
                    },
                    "stops": [
                      {
                        "sequence": 1,
                        "stopType": "Pickup",
                        "facility": {
                          "name": null,
                          "address": {
                            "line1": "16005 WAHRMAN ST",
                            "line2": null,
                            "line3": null,
                            "postalCode": "48174-9725",
                            "cityName": "Romulus",
                            "stateProvinceCode": "OH",
                            "countryCode": "US"
                          },
                          "geoCoordinates": {
                            "latitude": 40.246281,
                            "longitude": -82.868742
                          }
                        },
                        "appointment": {
                          "facilityOpenDateTimeUtc": null,
                          "facilityCloseDateTimeUtc": null,
                          "appointmentStartDateTimeUtc": "2020-06-04T19:07:01.4794621Z",
                          "appointmentEndDateTimeUtc": "2020-06-04T19:07:01.4794633Z"
                        },
                        "stopDetails": null
                      },
                      {
                        "sequence": 2,
                        "stopType": "Delivery",
                        "facility": {
                          "name": null,
                          "address": {
                            "line1": "131 State Route 3",
                            "line2": null,
                            "line3": null,
                            "postalCode": "43074",
                            "cityName": "Sunbury",
                            "stateProvinceCode": "OH",
                            "countryCode": "US"
                          },
                          "geoCoordinates": {
                            "latitude": 41.246281,
                            "longitude": -81.868742
                          }
                        },
                        "appointment": {
                          "facilityOpenDateTimeUtc": null,
                          "facilityCloseDateTimeUtc": null,
                          "appointmentStartDateTimeUtc": "2020-06-04T19:07:01.4794642Z",
                          "appointmentEndDateTimeUtc": "2020-06-04T19:07:01.479465Z"
                        },
                        "stopDetails": null
                      }
                    ]
                  }
                ],
                "pagination": { "limit": 1, "offset": 1, "totalCount": 1 }
              }
            }
          },
          "201": {
            "description": "Loads do not exist or are not available anymore"
          },
          "400": { "description": "Invalid request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/api/v1/Documents/{loadId}/{documentType}": {
      "get": {
        "tags": ["Documents"],
        "summary": "Gets an associated document with a load",
        "description": "Allows Coyote’s partners to retrieve one or more PDF documents in a zipped format for a given Load ID they’re associated to.",
        "operationId": "RetrieveDocument",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "The requested load ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "documentType",
            "in": "path",
            "description": "The document type requested",
            "required": true,
            "type": "string",
            "enum": [
              "Undefined",
              "VendorInvoice",
              "BillOfLading",
              "ProofOfDelivery",
              "LumperTicket",
              "ScaleTicket",
              "InGateTicket",
              "OutGateTicket",
              "Miscellaneous",
              "AccessorialAgreement",
              "RateConfirmation",
              "LoadTender",
              "Invoice",
              "CustomsDocuments",
              "InvoiceWithPaperwork",
              "DetentionLoading",
              "DetentionUnloading",
              "PalletReceipt",
              "SpotApproval",
              "EquipmentOrderedNotUsed",
              "CMR",
              "DemurrageLoading",
              "DemurrageUnloading",
              "ExitPass",
              "BalanceDue",
              "BalanceDueWithPaperwork",
              "PackingList"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "The document successfully retrieved and returned",
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Documents.DocumentRequest"
            },
            "examples": {
              "application/json": {
                "loadId": 17513654,
                "document": "__SAMPLE__",
                "documentType": "BillOfLading",
                "extensionType": "Zip"
              }
            }
          },
          "400": { "description": "Invalid request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "The load or the document does not exist" }
        }
      }
    },
    "/api/v1/Documents": {
      "post": {
        "tags": ["Documents"],
        "summary": "Submit a document to be associated with a load",
        "description": "Allows Coyote’s partners to post one or more documents that will be saved to a given Load ID that they are associated to. Only files up to 20 MB and with specific extensions are allowed. Zips are currently not supported.",
        "operationId": "SubmitDocument",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "documentRequest",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Documents.DocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was accepted and queued up for saving",
            "schema": { "type": "boolean" }
          },
          "400": { "description": "Invalid request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "The load or the document does not exist" }
        }
      }
    },
    "/api/v1/Loads": {
      "post": {
        "tags": ["Loads"],
        "summary": "Submit a load request",
        "description": "Allows Coyote’s partners to submit load requests with relevant load information.",
        "operationId": "Post",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "loadRequest",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.Load"
            }
          }
        ],
        "responses": {
          "200": { "description": "Load build request was accepted" },
          "400": { "description": "Invalid request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/api/v1/Loads/{loadId}": {
      "delete": {
        "tags": ["Loads"],
        "summary": "Cancel a load",
        "description": "Cancel a load that was previously submitted.",
        "operationId": "Delete",
        "consumes": [],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "The load was successfully cancelled" },
          "400": { "description": "Invalid request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/api/v1/Loads/{loadRequestId}/buildstatus": {
      "get": {
        "tags": ["Loads"],
        "summary": "Get load build status",
        "description": "Retrieve the load build status for a previously submitted request.",
        "operationId": "Status",
        "consumes": [],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "loadRequestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The load build status was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadRequestStatus"
            }
          },
          "400": { "description": "Invalid request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/api/v1/LocationStatuses/{loadId}": {
      "get": {
        "tags": ["LocationStatuses"],
        "summary": "Gets all tracking updates for a given load",
        "description": "Retrieves all tracking updates for a given load, including the dates and last locations tracked or updated by the driver.",
        "operationId": "Get",
        "consumes": [],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "The requested load ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The tracking updates were successfully retrieved",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.LocationStatus"
              }
            },
            "examples": {
              "application/json": [
                {
                  "loadId": 12345,
                  "address": {
                    "line1": "2545 W Diversey Ave",
                    "line2": null,
                    "city": "Chicago",
                    "postalCode": "60647",
                    "state": "IL",
                    "countryCode": "USA"
                  },
                  "geoCoordinates": {
                    "latitude": 41.9316,
                    "longitude": -87.6921
                  },
                  "timestamp": "2020-06-03T19:07:01.5034492Z"
                },
                {
                  "loadId": 12345,
                  "address": {
                    "line1": "1515 Wazee St",
                    "line2": null,
                    "city": "Denver",
                    "postalCode": "80202",
                    "state": "CO",
                    "countryCode": "USA"
                  },
                  "geoCoordinates": {
                    "latitude": 39.734,
                    "longitude": -104.935
                  },
                  "timestamp": "2020-06-01T19:07:01.5034505Z"
                }
              ]
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "The tracking updates do not exist" }
        },
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "curl -X GET \\\r\nhttps://api-sandbox.coyote.com/api/v1/LocationStatuses/{loadId} \\\r\n-H 'Authorization: Bearer TOKEN' \\ \r\n-H 'Content-Type: application/json'"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https://api-sandbox.coyote.com/api/v1/LocationStatuses/{loadId}\");\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddHeader(\"Authorization\", \"Bearer TOKEN\");\r\nrequest.AddHeader(\"content-type\", \"application/json\");\r\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Java",
            "source": "HttpResponse response = Unirest.post(\"https://api-sandbox.coyote.com/api/v1/LocationStatuses/{loadId}\")\r\n.header(\"content-type\", \"application/json\")\r\n.header(\"Authorization\", \"Bearer TOKEN\")\r\n.asString();"
          }
        ]
      }
    },
    "/api/v1/LocationStatuses/{loadId}/latest": {
      "get": {
        "tags": ["LocationStatuses"],
        "summary": "Gets the latest tracking update for a given load",
        "description": "Retrieves the last tracking update for a given load, including the date and last location tracked or updated by the driver.",
        "operationId": "GetLatest",
        "consumes": [],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "The requested load ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The tracking update was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.LocationStatus"
            },
            "examples": {
              "application/json": {
                "loadId": 12345,
                "address": {
                  "line1": "2545 W Diversey Ave",
                  "line2": null,
                  "city": "Chicago",
                  "postalCode": "60647",
                  "state": "IL",
                  "countryCode": "USA"
                },
                "geoCoordinates": {
                  "latitude": 41.9316,
                  "longitude": -87.6921
                },
                "timestamp": "2020-06-03T19:07:01.5040029Z"
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "The tracking update does not exist" }
        },
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "curl -X GET \\\r\nhttps://api-sandbox.coyote.com/api/v1/LocationStatuses/{loadId}/latest \\\r\n-H 'Authorization: Bearer TOKEN' \\ \r\n-H 'Content-Type: application/json'"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https://api-sandbox.coyote.com/api/v1/LocationStatuses/{loadId}/latest\");\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddHeader(\"Authorization\", \"Bearer TOKEN\");\r\nrequest.AddHeader(\"content-type\", \"application/json\");\r\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Java",
            "source": "HttpResponse response = Unirest.post(\"https://api-sandbox.coyote.com/api/v1/LocationStatuses/{loadId}/latest\")\r\n.header(\"content-type\", \"application/json\")\r\n.header(\"Authorization\", \"Bearer TOKEN\")\r\n.asString();"
          }
        ]
      }
    },
    "/api/v1/SpotQuotes": {
      "post": {
        "tags": ["SpotQuotes"],
        "summary": "Gets a TL Spot Quote",
        "description": "Given a set of shipment attributes as input, Coyote will send back a shipment quote with a spot quote ID (“spotQuoteId”). This \r\nquote includes fuel and will be valid for 5 hours. If you want to proceed with the quote and book a shipment, contact your Coyote rep via phone\r\nor email and refer to the Quote ID.",
        "operationId": "PostTL",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.SpotQuoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The spot quote was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.SpotQuote"
            },
            "examples": {
              "application/json": {
                "spotQuoteId": 342354,
                "customerShipmentId": "CUST1234",
                "origin": {
                  "cityName": "Chicago",
                  "stateCode": "IL",
                  "countryCode": "US",
                  "postalCode": "60647"
                },
                "destination": {
                  "cityName": "Madison",
                  "stateCode": "WI",
                  "countryCode": "US",
                  "postalCode": "50515"
                },
                "equipmentTypeId": 1,
                "pickUpDateUTC": "2020-06-09T14:07:01.5117988-05:00",
                "validUntilUtc": "2020-06-03T19:07:01.511803-05:00",
                "totalRate": 837.5,
                "rateLineItems": [
                  {
                    "rateCode": "FR",
                    "description": "Flat Rate",
                    "unitRate": 650.0,
                    "units": 1.0,
                    "totalRate": 650.0,
                    "currency": "USD"
                  },
                  {
                    "rateCode": "405",
                    "description": "Fuel Surcharge",
                    "unitRate": 1.25,
                    "units": 150.0,
                    "totalRate": 187.5,
                    "currency": "USD"
                  }
                ]
              }
            }
          },
          "400": { "description": "Invalid request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        },
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "curl -k -H 'Content-Type: application/json'\\\r\n-H 'Authorization: Bearer TOKEN'\\\r\n-X POST -d '{\r\n  \"EquipmentTypeId\": \"V\",\r\n  \"Origin\": {\r\n    \"CityName\": \"Chicago\",\r\n    \"StateCode\": \"IL\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"60647\"\r\n  },\r\n  \"Destination\": {\r\n    \"CityName\": \"Madison\",\r\n    \"StateCode\": \"WI\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"53703\"\r\n  },\r\n  \"PickUpDateUTC\": \"2020-06-08T19:07:01.5291744Z\",\r\n  \"MinTemperature\": null,\r\n  \"MaxTemperature\": null,\r\n  \"Weight\": 100.0,\r\n  \"Commodity\": \"Sample Commodity\",\r\n  \"EquipmentLength\": 53.0,\r\n  \"IsHazmat\": false,\r\n  \"IsDropTrailer\": false,\r\n  \"CustomerShipmentId\": \"CUST1234\"\r\n}' 'https://api-sandbox.coyote.com/api/v1/SpotQuotes'"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https://api-sandbox.coyote.com/api/v1/SpotQuotes\");var request = new RestRequest(Method.POST);\r\nrequest.AddHeader(\"Authorization\", \"Bearer TOKEN\");\r\nrequest.AddHeader(\"content-type\", \"application/json\");\r\nrequest.AddParameter(\"application/json\", @\"{\r\n  \"EquipmentTypeId\": \"V\",\r\n  \"Origin\": {\r\n    \"CityName\": \"Chicago\",\r\n    \"StateCode\": \"IL\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"60647\"\r\n  },\r\n  \"Destination\": {\r\n    \"CityName\": \"Madison\",\r\n    \"StateCode\": \"WI\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"53703\"\r\n  },\r\n  \"PickUpDateUTC\": \"2020-06-08T19:07:01.5291744Z\",\r\n  \"MinTemperature\": null,\r\n  \"MaxTemperature\": null,\r\n  \"Weight\": 100.0,\r\n  \"Commodity\": \"Sample Commodity\",\r\n  \"EquipmentLength\": 53.0,\r\n  \"IsHazmat\": false,\r\n  \"IsDropTrailer\": false,\r\n  \"CustomerShipmentId\": \"CUST1234\"\r\n}\", ParameterType.RequestBody);\r\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Java",
            "source": "HttpResponse response = Unirest.post(\"https://api-sandbox.coyote.com/api/v1/SpotQuotes\")\r\n.header(\"content-type\", \"application/json\")\r\n.header(\"Authorization\", \"Bearer TOKEN\")\r\n.body(\"{\r\n  \"EquipmentTypeId\": \"V\",\r\n  \"Origin\": {\r\n    \"CityName\": \"Chicago\",\r\n    \"StateCode\": \"IL\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"60647\"\r\n  },\r\n  \"Destination\": {\r\n    \"CityName\": \"Madison\",\r\n    \"StateCode\": \"WI\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"53703\"\r\n  },\r\n  \"PickUpDateUTC\": \"2020-06-08T19:07:01.5291744Z\",\r\n  \"MinTemperature\": null,\r\n  \"MaxTemperature\": null,\r\n  \"Weight\": 100.0,\r\n  \"Commodity\": \"Sample Commodity\",\r\n  \"EquipmentLength\": 53.0,\r\n  \"IsHazmat\": false,\r\n  \"IsDropTrailer\": false,\r\n  \"CustomerShipmentId\": \"CUST1234\"\r\n}\")\r\n.asString();"
          }
        ]
      }
    },
    "/api/v1/LTLSpotQuotes": {
      "post": {
        "tags": ["SpotQuotes"],
        "summary": "Gets an LTL Spot Quote",
        "description": "Given a set of shipment attributes as input, Coyote will send back an LTL shipment quote with an LTL spot quote ID (“ltlSpotQuoteId”). This \r\nquote includes the list of carriers and their respective quotes and is valid for 7 days. If you want to proceed with the specific quote and book a shipment, contact your Coyote rep via phone\r\nor email and refer to the LTL Spot Quote ID along with the Carrier Quote ID.",
        "operationId": "PostLTL",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.LTLSpotQuoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved LTL Rates",
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.LTLSpotQuote"
            },
            "examples": {
              "application/json": {
                "ltlSpotQuoteId": "3decae4d-d4a4-4490-93e6-7d74613ca5bb",
                "carrierQuotes": [
                  {
                    "quoteID": "CAR12334",
                    "carrierName": "Carrier XYZ",
                    "totalRate": 150.0,
                    "currencyType": "USD",
                    "transitTime": 1,
                    "interline": "Direct",
                    "deliveryDate": "2020-06-05T14:07:01.5212427-05:00"
                  },
                  {
                    "quoteID": "CAR34556",
                    "carrierName": "Carrier ABC",
                    "totalRate": 100.0,
                    "currencyType": "USD",
                    "transitTime": 2,
                    "interline": "Indirect",
                    "deliveryDate": "2020-06-06T14:07:01.5212454-05:00"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "No rates found for the origin and destination"
          },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/api/v1/Trackings/{loadId}/stopdetails": {
      "get": {
        "tags": ["Trackings"],
        "summary": "Gets all load stop details",
        "description": "Retrieves all load stop details for a given load,\r\n           including facility information, as well as appointment and tracking milestones.",
        "operationId": "GetStopDetailAsync",
        "consumes": [],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "The requested load Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.StopDetail"
            },
            "examples": {
              "application/json": {
                "loadStops": [
                  {
                    "sequence": 1,
                    "stopType": "Pickup",
                    "facility": {
                      "name": "Coyote Logistics",
                      "address": {
                        "line1": "2545 W Diversey Ave",
                        "line2": null,
                        "line3": null,
                        "postalCode": "60647",
                        "cityName": "Chicago",
                        "stateProvinceCode": "IL",
                        "countryCode": "USA"
                      },
                      "geoCoordinates": {
                        "latitude": 41.931674,
                        "longitude": -87.691939
                      }
                    },
                    "appointment": {
                      "facilityOpenDateTimeUtc": "2020-06-04T19:07:01.5252362Z",
                      "facilityCloseDateTimeUtc": "2020-06-04T19:07:01.5252355Z",
                      "appointmentStartDateTimeUtc": "2020-06-03T19:12:01.5252334Z",
                      "appointmentEndDateTimeUtc": "2020-06-03T19:47:01.5252348Z"
                    },
                    "milestone": {
                      "driverArrivalDateTimeUtc": "2020-06-03T19:12:01.5252376Z",
                      "trailerArriveDateTimeUtc": "2020-06-03T19:12:01.5252369Z",
                      "trailerLoadedDateTimeUtc": "2020-06-03T19:12:01.5252397Z",
                      "trailerEmptyDateTimeUtc": "2020-06-03T19:12:01.525239Z",
                      "driverDepartureDateTimeUtc": "2020-06-03T19:12:01.5252383Z"
                    }
                  },
                  {
                    "sequence": 2,
                    "stopType": "Delivery",
                    "facility": {
                      "name": "Coyote Logistics",
                      "address": {
                        "line1": "1515 Wazee St",
                        "line2": null,
                        "line3": null,
                        "postalCode": "80202",
                        "cityName": "Denver",
                        "stateProvinceCode": "CO",
                        "countryCode": "USA"
                      },
                      "geoCoordinates": {
                        "latitude": 41.931674,
                        "longitude": -87.691939
                      }
                    },
                    "appointment": {
                      "facilityOpenDateTimeUtc": "2020-06-04T19:07:01.5252429Z",
                      "facilityCloseDateTimeUtc": "2020-06-04T19:07:01.5252423Z",
                      "appointmentStartDateTimeUtc": "2020-06-04T19:07:01.5252409Z",
                      "appointmentEndDateTimeUtc": "2020-06-04T19:07:01.5252416Z"
                    },
                    "milestone": {
                      "driverArrivalDateTimeUtc": "2020-06-04T19:07:01.5252444Z",
                      "trailerArriveDateTimeUtc": "2020-06-04T19:07:01.5252437Z",
                      "trailerLoadedDateTimeUtc": "2020-06-04T19:07:01.5252464Z",
                      "trailerEmptyDateTimeUtc": "2020-06-04T19:07:01.5252457Z",
                      "driverDepartureDateTimeUtc": "2020-06-04T19:07:01.525245Z"
                    }
                  }
                ]
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not found" },
          "503": { "description": "Temporarily unavailable" }
        }
      }
    },
    "/api/v1/Trackings/{loadId}/summaries": {
      "get": {
        "tags": ["Trackings"],
        "summary": "Gets load tracking summary",
        "description": "Retrieves a tracking summary view for a given load, including the latest location update,\r\n           next stop details, and estimated arrival.",
        "operationId": "GetSummaryAsync",
        "consumes": [],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "The requested load Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved",
            "schema": {
              "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Summary"
            },
            "examples": {
              "application/json": {
                "latestLocationStatus": {
                  "address": {
                    "line1": "2545 W Diversey Ave",
                    "line2": null,
                    "line3": null,
                    "postalCode": "60647",
                    "cityName": "Chicago",
                    "stateProvinceCode": "IL",
                    "countryCode": "USA"
                  },
                  "timestampUtc": "2020-06-03T19:07:01.5289919Z",
                  "geoCoordinates": {
                    "latitude": 41.931674,
                    "longitude": -87.691939
                  }
                },
                "nextStop": {
                  "sequence": 2,
                  "stopType": "Delivery",
                  "facility": {
                    "name": "Coyote Logistics",
                    "address": {
                      "line1": "2545 W Diversey Ave",
                      "line2": null,
                      "line3": null,
                      "postalCode": "60647",
                      "cityName": "Chicago",
                      "stateProvinceCode": "IL",
                      "countryCode": "USA"
                    },
                    "geoCoordinates": {
                      "latitude": 41.931674,
                      "longitude": -87.691939
                    }
                  },
                  "appointment": {
                    "facilityOpenDateTimeUtc": "2020-06-04T19:07:01.5289947Z",
                    "facilityCloseDateTimeUtc": "2020-06-04T19:07:01.528994Z",
                    "appointmentStartDateTimeUtc": "2020-06-03T19:12:01.5289926Z",
                    "appointmentEndDateTimeUtc": "2020-06-03T19:47:01.5289933Z"
                  }
                },
                "estimatedArrivalDateTimeUtc": "2020-06-03T19:17:01.5289904Z",
                "nextStopDistance": { "value": 10.0, "unit": "Miles" }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not found" },
          "503": { "description": "Temporarily unavailable" }
        }
      }
    }
  },
  "definitions": {
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.AvailableLoad": {
      "description": "Available load information",
      "required": ["loadId", "loadDetails", "stops"],
      "type": "object",
      "properties": {
        "loadId": {
          "format": "int32",
          "description": "Available load ID",
          "type": "integer"
        },
        "loadDetails": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadDetails",
          "description": "Available load details"
        },
        "stops": {
          "description": "Load stops information",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadStop"
          }
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadDetails": {
      "description": "Load details",
      "required": [
        "rate",
        "mode",
        "equipment",
        "loadDistance",
        "weight",
        "temperatureSettings",
        "loadAttributes"
      ],
      "type": "object",
      "properties": {
        "rate": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Rate",
          "description": "Load rate"
        },
        "mode": {
          "description": "Load mode",
          "enum": ["TL", "LTL", "IMDL"],
          "type": "string"
        },
        "equipment": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.EquipmentDetails",
          "description": "Equipment details"
        },
        "loadDistance": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Distance",
          "description": "Load distance"
        },
        "weight": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Weight",
          "description": "Load weight"
        },
        "temperatureSettings": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.TemperatureSettings",
          "description": "Load temperature details"
        },
        "loadAttributes": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadAttributes",
          "description": "Load attributes"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadStop": {
      "description": "Defines the load stop",
      "required": [
        "sequence",
        "stopType",
        "facility",
        "appointment",
        "stopDetails"
      ],
      "type": "object",
      "properties": {
        "sequence": {
          "format": "int32",
          "description": "Stop sequence",
          "type": "integer"
        },
        "stopType": {
          "description": "Type of stop",
          "enum": [
            "None",
            "Pickup",
            "Delivery",
            "ContainerDepotOrigin",
            "ContainerDepotTermination",
            "OriginRamp",
            "DestinationRamp",
            "OriginPort",
            "DestinationPort",
            "OriginAirport",
            "DestinationAirport",
            "CrossDock"
          ],
          "type": "string"
        },
        "facility": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Facility",
          "description": "Facility details"
        },
        "appointment": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Appointment",
          "description": "Stop appointment details"
        },
        "stopDetails": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.StopDetails",
          "description": "Stop details"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Rate": {
      "description": "Defines the load rate",
      "required": ["value", "currencyType"],
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "description": "Load rate",
          "type": "number"
        },
        "currencyType": {
          "description": "Rate currency",
          "enum": [
            "Undefined",
            "USD",
            "CAD",
            "MXN",
            "ARS",
            "BRL",
            "CLP",
            "COP",
            "VEF",
            "EUR",
            "GBP",
            "HUF",
            "PLN"
          ],
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.EquipmentDetails": {
      "description": "Equipment details",
      "required": [
        "equipmentHeight",
        "equipmentLength",
        "equipmentType",
        "equipmentWidth"
      ],
      "type": "object",
      "properties": {
        "equipmentHeight": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Dimension",
          "description": "Equipment height"
        },
        "equipmentLength": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Dimension",
          "description": "Equipment length"
        },
        "equipmentType": { "description": "Equipment type", "type": "string" },
        "equipmentWidth": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Dimension",
          "description": "Equipment width"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Distance": {
      "description": "Distance to Next Stop __(currently unsupported)__",
      "required": ["value", "unit"],
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "description": "Value",
          "type": "number"
        },
        "unit": {
          "description": "Unit",
          "enum": ["Miles", "Kilometers"],
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Weight": {
      "description": "Defines the weight",
      "required": ["value", "unit"],
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "description": "Weight value",
          "type": "number"
        },
        "unit": {
          "description": "Weight unit",
          "enum": ["Undefined", "Pounds", "Kilograms", "Tons", "MetricTons"],
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.TemperatureSettings": {
      "description": "Defines the temperature settings of load",
      "type": "object",
      "properties": {
        "preCoolTemperature": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Temperature",
          "description": "Pre cool temperature"
        },
        "maximumTemperature": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Temperature",
          "description": "Maximum temperature"
        },
        "minimumTemperature": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Temperature",
          "description": "Minimum temperature"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadAttributes": {
      "description": "Load attributes",
      "required": [
        "airRide",
        "blind",
        "bondedCarrier",
        "borderCrossingByCoyote",
        "borderCrossingByCustomer",
        "coyoteGo",
        "crossBorderMexico",
        "ctpat",
        "disasterRelief",
        "doubleBlind",
        "doubleTrailer",
        "drayage",
        "duraplate",
        "englishSpeaking",
        "exitPass",
        "fast",
        "fdaClearanceRequired",
        "floodRelief",
        "govt",
        "guaranteed",
        "haccp",
        "hazmatEndorsement",
        "hvhr",
        "hvhrPlus",
        "intraMexico",
        "liquor",
        "neec",
        "noCameraPhonePhotosOfPaperwork",
        "overDimension",
        "palletJack",
        "partialLoad",
        "pipOrPep",
        "powerOnly",
        "ppe",
        "protectFromFreeze",
        "repairReceiptRequiredForBreakdowns",
        "seal",
        "secondaryBorderInspection",
        "tankerEndorsement",
        "tcr",
        "team",
        "techTrackingRequired",
        "tradeShow",
        "trailerControl",
        "transloadByCoyote",
        "transloadByCustomer",
        "tripleTrailer",
        "twic",
        "uiia"
      ],
      "type": "object",
      "properties": {
        "airRide": { "description": "Is load airride", "type": "boolean" },
        "blind": { "description": "Is load blind", "type": "boolean" },
        "bondedCarrier": {
          "description": "Is bonded carrier",
          "type": "boolean"
        },
        "borderCrossingByCoyote": {
          "description": "Is border crossing by coyote",
          "type": "boolean"
        },
        "borderCrossingByCustomer": {
          "description": "Is border crossing by customer",
          "type": "boolean"
        },
        "coyoteGo": { "description": "Is CoyoteGo", "type": "boolean" },
        "crossBorderMexico": {
          "description": "Is cross border Mexico",
          "type": "boolean"
        },
        "ctpat": { "description": "Is CTPAT", "type": "boolean" },
        "disasterRelief": {
          "description": "Is disaster relief",
          "type": "boolean"
        },
        "doubleBlind": { "description": "Is double blind", "type": "boolean" },
        "doubleTrailer": {
          "description": "Is double trailer load",
          "type": "boolean"
        },
        "drayage": { "description": "Is drayage", "type": "boolean" },
        "duraplate": { "description": "Is duraplate", "type": "boolean" },
        "englishSpeaking": {
          "description": "Is English speaking",
          "type": "boolean"
        },
        "exitPass": { "description": "Is exit pass", "type": "boolean" },
        "fast": { "description": "Fast", "type": "boolean" },
        "fdaClearanceRequired": {
          "description": "Is FDA clearance required",
          "type": "boolean"
        },
        "floodRelief": { "description": "Is flood relief", "type": "boolean" },
        "govt": { "description": "Govt", "type": "boolean" },
        "guaranteed": { "description": "Guaranteed", "type": "boolean" },
        "haccp": { "description": "HACCP", "type": "boolean" },
        "hazmatEndorsement": {
          "description": "Hazmat Endorsement",
          "type": "boolean"
        },
        "hvhr": { "description": "Is HVHR", "type": "boolean" },
        "hvhrPlus": { "description": "HVHR plus", "type": "boolean" },
        "intraMexico": { "description": "Is Intra Mexico", "type": "boolean" },
        "liquor": { "description": "Is liquor", "type": "boolean" },
        "neec": { "description": "Is NEEC", "type": "boolean" },
        "noCameraPhonePhotosOfPaperwork": {
          "description": "No camera phone photos of paperwork",
          "type": "boolean"
        },
        "overDimension": {
          "description": "Is over dimension",
          "type": "boolean"
        },
        "palletJack": { "description": "Is pallet jack", "type": "boolean" },
        "partialLoad": { "description": "Is partial Load", "type": "boolean" },
        "pipOrPep": { "description": "Is PIP or PEP", "type": "boolean" },
        "powerOnly": { "description": "Is power only load", "type": "boolean" },
        "ppe": { "description": "Is PPE", "type": "boolean" },
        "protectFromFreeze": {
          "description": "Whether protect from freeze",
          "type": "boolean"
        },
        "repairReceiptRequiredForBreakdowns": {
          "description": "Whether repair receipt required for breakdowns",
          "type": "boolean"
        },
        "seal": { "description": "Is seal", "type": "boolean" },
        "secondaryBorderInspection": {
          "description": "Is secondary border inspection",
          "type": "boolean"
        },
        "tankerEndorsement": {
          "description": "Is tanker endorsement",
          "type": "boolean"
        },
        "tcr": { "description": "Is TCR", "type": "boolean" },
        "team": { "description": "Is team", "type": "boolean" },
        "techTrackingRequired": {
          "description": "Whether tech tracking required",
          "type": "boolean"
        },
        "tradeShow": { "description": "Is trade show", "type": "boolean" },
        "trailerControl": {
          "description": "Is trailer control",
          "type": "boolean"
        },
        "transloadByCoyote": {
          "description": "Is transload by coyote",
          "type": "boolean"
        },
        "transloadByCustomer": {
          "description": "Is transload by customer",
          "type": "boolean"
        },
        "tripleTrailer": {
          "description": "Is triple trailer",
          "type": "boolean"
        },
        "twic": { "description": "Is TWIC", "type": "boolean" },
        "uiia": { "description": "Is UIIA", "type": "boolean" }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Facility": {
      "description": "Facility",
      "required": ["name", "address", "geoCoordinates"],
      "type": "object",
      "properties": {
        "name": { "description": "Name", "type": "string" },
        "address": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.TrackingAddress",
          "description": "Address"
        },
        "geoCoordinates": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.GeoCoordinates",
          "description": "GeoCoordinates"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Appointment": {
      "description": "Appointment",
      "type": "object",
      "properties": {
        "facilityOpenDateTimeUtc": {
          "format": "date-time",
          "description": "Facility Open DateTime in Utc",
          "type": "string"
        },
        "facilityCloseDateTimeUtc": {
          "format": "date-time",
          "description": "Facility Close DateTime in Utc",
          "type": "string"
        },
        "appointmentStartDateTimeUtc": {
          "format": "date-time",
          "description": "Appointment Start DateTime in Utc",
          "type": "string"
        },
        "appointmentEndDateTimeUtc": {
          "format": "date-time",
          "description": "Appointment End DateTime in Utc",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.StopDetails": {
      "description": "Load stop details",
      "required": ["commodities"],
      "type": "object",
      "properties": {
        "commodities": {
          "description": "List of stop commodities",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadCommodity"
          }
        },
        "stopAttributes": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadStopAttributes",
          "description": "Stop attributes"
        },
        "stopNotes": { "description": "Stop notes", "type": "string" }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Dimension": {
      "description": "Defines the Dimension",
      "required": ["value", "unit"],
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "description": "Dimension value",
          "type": "number"
        },
        "unit": {
          "description": "Dimension unit",
          "enum": [
            "Undefined",
            "Inches",
            "Meters",
            "Centimeters",
            "Millimeters",
            "Feet"
          ],
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Temperature": {
      "description": "Defines the temperature details",
      "required": ["value", "unit"],
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "description": "Temperature value.",
          "type": "number"
        },
        "unit": {
          "description": "Unit of temperature.",
          "enum": ["Fahrenheit", "Celsius"],
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.TrackingAddress": {
      "description": "Address",
      "required": [
        "line1",
        "postalCode",
        "cityName",
        "stateProvinceCode",
        "countryCode"
      ],
      "type": "object",
      "properties": {
        "line1": { "description": "Line 1", "type": "string" },
        "line2": { "description": "Line 2", "type": "string" },
        "line3": { "description": "Line 3", "type": "string" },
        "postalCode": { "description": "Postal Code", "type": "string" },
        "cityName": { "description": "City Name", "type": "string" },
        "stateProvinceCode": {
          "description": "State or Province Code",
          "type": "string"
        },
        "countryCode": { "description": "Country Code", "type": "string" }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.GeoCoordinates": {
      "description": "GeoCoordinates",
      "required": ["latitude", "longitude"],
      "type": "object",
      "properties": {
        "latitude": {
          "format": "double",
          "description": "Latitude",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "description": "Longitude",
          "type": "number"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadCommodity": {
      "description": "Defines the load commodity",
      "required": ["description", "weight"],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of load commodity",
          "type": "string"
        },
        "weight": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Weight",
          "description": "Weight of load commodity"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadStopAttributes": {
      "description": "Defines the Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadStopAttributes.",
      "type": "object",
      "properties": {
        "blind": { "description": "Is blind", "type": "boolean" },
        "closedToeShoes": {
          "description": "Is closed toe shoes",
          "type": "boolean"
        },
        "detentionAuthFormRequired": {
          "description": "Is detention auth form required",
          "type": "boolean"
        },
        "driverAssist": {
          "description": "Whether driver assist",
          "type": "boolean"
        },
        "dropAndHook": { "description": "Is drop and hook", "type": "boolean" },
        "dropTrailerAllowXHoursToUnload": {
          "format": "int32",
          "description": "Allow hours to unload",
          "type": "integer"
        },
        "dropTrailerRequired": {
          "description": "Is drop trailer required",
          "type": "boolean"
        },
        "earPlugs": { "description": "Ear plugs", "type": "boolean" },
        "englishSpeaking": {
          "description": "Is English speaking",
          "type": "boolean"
        },
        "escortOrTwicRequired": {
          "description": "Whether escort or twic Required",
          "type": "boolean"
        },
        "exitPass": { "description": "Exit pass", "type": "boolean" },
        "government": { "description": "Is government", "type": "boolean" },
        "hardHat": { "description": "Is hard hat", "type": "boolean" },
        "inOutTimesWSignature": {
          "description": "Are in out times with signature",
          "type": "boolean"
        },
        "insideDelivery": {
          "description": "Is inside delivery",
          "type": "boolean"
        },
        "insidePickup": {
          "description": "Is inside pickup",
          "type": "boolean"
        },
        "legalScaleOnSite": {
          "description": "Is legal scale on site",
          "type": "boolean"
        },
        "liftgateDelivery": {
          "description": "Is liftgate delivery",
          "type": "boolean"
        },
        "liftgatePickup": {
          "description": "Is liftgate pickup",
          "type": "boolean"
        },
        "limitedAccessDeliveryAirport": {
          "description": "Is limited access delivery airport",
          "type": "boolean"
        },
        "limitedAccessDeliveryChurch": {
          "description": "Is limited access delivery church",
          "type": "boolean"
        },
        "limitedAccessDeliveryConstructionSite": {
          "description": "Is limited access delivery construction site",
          "type": "boolean"
        },
        "limitedAccessDeliveryFarm": {
          "description": "Is limited access delivery farm",
          "type": "boolean"
        },
        "limitedAccessDeliveryMilitaryBase": {
          "description": "Is limited access delivery military base",
          "type": "boolean"
        },
        "limitedAccessDeliveryMineSite": {
          "description": "Is limited access delivery mine site",
          "type": "boolean"
        },
        "limitedAccessDeliveryMiniStorage": {
          "description": "Is limited access delivery mini storage",
          "type": "boolean"
        },
        "limitedAccessDeliveryOther": {
          "description": "Is limited access delivery other",
          "type": "boolean"
        },
        "limitedAccessDeliveryPrison": {
          "description": "Is limited access delivery prison",
          "type": "boolean"
        },
        "limitedAccessDeliveryRemoteGovt": {
          "description": "Is limited access delivery remote govt",
          "type": "boolean"
        },
        "limitedAccessDeliverySchool": {
          "description": "Is limited access delivery school",
          "type": "boolean"
        },
        "limitedAccessPickupAirport": {
          "description": "Is limited access pickup airport",
          "type": "boolean"
        },
        "limitedAccessPickupChurch": {
          "description": "Is limited access pickup church",
          "type": "boolean"
        },
        "limitedAccessPickupConstructionSite": {
          "description": "Is limited access pickup construction site",
          "type": "boolean"
        },
        "limitedAccessPickupFarm": {
          "description": "Is limited access pickup farm",
          "type": "boolean"
        },
        "limitedAccessPickupMilitaryBase": {
          "description": "Is limited access pickup military base",
          "type": "boolean"
        },
        "limitedAccessPickupMineSite": {
          "description": "Is limited access pickup mine site",
          "type": "boolean"
        },
        "limitedAccessPickupMiniStorage": {
          "description": "Is limited access pickup mini storage",
          "type": "boolean"
        },
        "limitedAccessPickupOther": {
          "description": "Is limited access pickup other",
          "type": "boolean"
        },
        "limitedAccessPickupPrison": {
          "description": "Is limited access pickup prison",
          "type": "boolean"
        },
        "limitedAccessPickupRemoteGovt": {
          "description": "Is limited access pickup remote govt",
          "type": "boolean"
        },
        "limitedAccessPickupSchool": {
          "description": "Is limited access pickup school",
          "type": "boolean"
        },
        "liquorPermit": {
          "description": "Is liquor permit",
          "type": "boolean"
        },
        "loadedToLegalWeight": {
          "description": "Is loaded to legal weight",
          "type": "boolean"
        },
        "longPants": { "description": "Is long pants", "type": "boolean" },
        "longSleeves": { "description": "Is long sleeves", "type": "boolean" },
        "lumperReceiptRequired": {
          "description": "Whether lumper receipt required",
          "type": "boolean"
        },
        "mustCheckInAsCoyote": {
          "description": "Must check in as Coyote",
          "type": "boolean"
        },
        "mustProvideAndApplySeal": {
          "description": "Whether must provide and apply seal",
          "type": "boolean"
        },
        "mustSecureLoad": {
          "description": "Whether must secure load",
          "type": "boolean"
        },
        "needCoyoteApprovalToUseLumperService": {
          "description": "Is Coyote approval needed to use lumper service",
          "type": "boolean"
        },
        "noAnimals": { "description": "Is no animals", "type": "boolean" },
        "noDetention": { "description": "Is no detention", "type": "boolean" },
        "noEarlyDeliveries": {
          "description": "Whether no early deliveries",
          "type": "boolean"
        },
        "noLoadLocksOrStraps": {
          "description": "Is no load locks or straps",
          "type": "boolean"
        },
        "noSameDayReschedules": {
          "description": "Is no same day reschedules",
          "type": "boolean"
        },
        "notAllowedOnDock": {
          "description": "Is not allowed on dock",
          "type": "boolean"
        },
        "noTankTops": { "description": "Is no tank tops", "type": "boolean" },
        "noTrailerDetentionOrLayover": {
          "description": "Is no trailer detention or layover",
          "type": "boolean"
        },
        "noWorkIns": { "description": "Is no work ins", "type": "boolean" },
        "onSiteParkingAvailable": {
          "description": "Whether on site parking available",
          "type": "boolean"
        },
        "overnightParkingAvailable": {
          "description": "Is overnight parking available",
          "type": "boolean"
        },
        "payLumperWCashTCheck": {
          "description": "PayLumperWCashTCheck",
          "type": "boolean"
        },
        "preLoadDropTrailerXHoursInAdvance": {
          "format": "int32",
          "description": "Pre load drop trailer in advance",
          "type": "integer"
        },
        "prePaidLumperService": {
          "description": "Is prepaid lumper service",
          "type": "boolean"
        },
        "residentialDelivery": {
          "description": "Is residential delivery",
          "type": "boolean"
        },
        "residentialPickup": {
          "description": "Is residential pickup",
          "type": "boolean"
        },
        "safetyGlasses": {
          "description": "Is safety glasses",
          "type": "boolean"
        },
        "safetyVest": { "description": "Is safety vest", "type": "boolean" },
        "scaleEmpty": { "description": "Is scale empty", "type": "boolean" },
        "scaleHeavy": { "description": "Is scale heavy", "type": "boolean" },
        "secureYard": { "description": "Is secure yard", "type": "boolean" },
        "sortAndSegregateDelivery": {
          "description": "Whether to sort and segregate delivery",
          "type": "boolean"
        },
        "sortAndSegregatePickup": {
          "description": "Whether to sort and segregate pickup",
          "type": "boolean"
        },
        "spanishSpeaking": {
          "description": "Is Spanish speaking",
          "type": "boolean"
        },
        "steelToeShoes": {
          "description": "Is steel toe shoes",
          "type": "boolean"
        },
        "strictAppt": { "description": "Is strict appt", "type": "boolean" },
        "tradeshowDelivery": {
          "description": "Is trade show delivery",
          "type": "boolean"
        },
        "tradeshowPickup": {
          "description": "Is trade show pickup",
          "type": "boolean"
        },
        "trailerInspectionFormRequired": {
          "description": "Whether trailer inspection form required",
          "type": "boolean"
        },
        "twic": { "description": "Is TWIC", "type": "boolean" },
        "twicRequiredNoEscorts": {
          "description": "Is TWIC required no escorts",
          "type": "boolean"
        },
        "uiia": { "description": "Is UIIA", "type": "boolean" },
        "unpackDetrash": {
          "description": "Is unpack detrash",
          "type": "boolean"
        },
        "usCitizen": { "description": "Is US citizen", "type": "boolean" },
        "validUSCommercialDriversLicenseHardcopy": {
          "description": "Is valid US commercial drivers license hardcopy",
          "type": "boolean"
        },
        "xTankOfFuelAtShipper": {
          "format": "int32",
          "description": "Number of tank of fuel at shipper",
          "type": "integer"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.AvailableLoadsRequest": {
      "description": "Request object to fetch available loads",
      "required": ["origin", "equipmentType", "mode"],
      "type": "object",
      "properties": {
        "origin": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadStopLocationInfo",
          "description": "Origin to search available load"
        },
        "destination": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadStopLocationInfo",
          "description": "Destination to search available load"
        },
        "equipmentType": {
          "description": "Equipement type",
          "enum": [
            "V",
            "R",
            "F",
            "VR",
            "C",
            "SD",
            "DF",
            "DD",
            "SS",
            "FT",
            "E",
            "T",
            "B",
            "Z",
            "M",
            "Q",
            "P",
            "CNRU",
            "CPPU",
            "CSXU",
            "EMHU",
            "EMPU",
            "EMWU",
            "EPTY",
            "PACU",
            "W",
            "G",
            "K",
            "DR",
            "H",
            "FWS",
            "BT",
            "ZS",
            "XM",
            "MV",
            "MF",
            "FM",
            "DV",
            "LALL",
            "SDL",
            "A",
            "BL",
            "RC",
            "HS",
            "GM",
            "GS",
            "FS",
            "SDS",
            "RTC",
            "RTB",
            "WFB",
            "PO",
            "DDT",
            "DDB",
            "DDF",
            "SFB",
            "SFC",
            "RBC",
            "FB",
            "FBT",
            "FBX",
            "SKC",
            "LL",
            "LLS",
            "LLX",
            "TKC",
            "TKF",
            "IM",
            "IMF"
          ],
          "type": "string"
        },
        "mode": {
          "description": "Load mode",
          "enum": ["TL_LTL", "TL", "LTL"],
          "type": "string"
        }
      },
      "example": {
        "origin": {
          "location": { "latitude": 41.9316, "longitude": -87.6921 },
          "deadheadRadius": { "value": 120.0, "unit": "Miles" },
          "appointment": {
            "appointmentEndDateTime": "2020-06-03T12:00:00-05:00",
            "appointmentStartDateTime": "2020-06-02T14:00:00-05:00"
          }
        },
        "destination": {
          "location": { "latitude": 42.9316, "longitude": -88.6921 },
          "deadheadRadius": { "value": 120.0, "unit": "Miles" },
          "appointment": {
            "appointmentEndDateTime": "2020-06-03T12:00:00-05:00",
            "appointmentStartDateTime": "2020-06-02T18:00:00-05:00"
          }
        },
        "equipmentType": "V",
        "mode": 0
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.LoadStopLocationInfo": {
      "description": "Defines the load stop location details for request",
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.GeoLocation",
          "description": "Stop location"
        },
        "deadheadRadius": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Radius",
          "description": "Stop deadhead radius"
        },
        "appointment": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.AppointmentDate",
          "description": "Stop appointment date"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.GeoLocation": {
      "description": "Geo location",
      "type": "object",
      "properties": {
        "latitude": {
          "format": "double",
          "description": "Latitude",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "description": "Longitude",
          "type": "number"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Radius": {
      "description": "Defines radius",
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "description": "Value",
          "type": "number"
        },
        "unit": {
          "description": "Unit",
          "enum": ["Miles", "Kilometers"],
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.AppointmentDate": {
      "description": "Appointment date of stop",
      "type": "object",
      "properties": {
        "appointmentEndDateTime": {
          "format": "date-time",
          "description": "Appointment end date and time",
          "type": "string"
        },
        "appointmentStartDateTime": {
          "format": "date-time",
          "description": "Appointment start date and time",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.PagedAvailableLoads": {
      "description": "Defines the paged available loads",
      "type": "object",
      "properties": {
        "loads": {
          "description": "List of available loads",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.AvailableLoad"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Pagination",
          "description": "Pagination information"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.AvailableLoads.Pagination": {
      "description": "Pagination information",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "description": "Limit",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "description": "Offset",
          "type": "integer"
        },
        "totalCount": {
          "format": "int32",
          "description": "Total loads found",
          "type": "integer"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Documents.DocumentRequest": {
      "description": "Document Request",
      "required": ["loadId", "document", "documentType", "extensionType"],
      "type": "object",
      "properties": {
        "loadId": {
          "format": "int32",
          "description": "The requested load ID.",
          "type": "integer"
        },
        "document": {
          "format": "byte",
          "description": "Document byte array",
          "type": "string"
        },
        "documentType": {
          "description": "Document Type",
          "enum": [
            "Undefined",
            "VendorInvoice",
            "BillOfLading",
            "ProofOfDelivery",
            "LumperTicket",
            "ScaleTicket",
            "InGateTicket",
            "OutGateTicket",
            "Miscellaneous",
            "AccessorialAgreement",
            "RateConfirmation",
            "LoadTender",
            "Invoice",
            "CustomsDocuments",
            "InvoiceWithPaperwork",
            "DetentionLoading",
            "DetentionUnloading",
            "PalletReceipt",
            "SpotApproval",
            "EquipmentOrderedNotUsed",
            "CMR",
            "DemurrageLoading",
            "DemurrageUnloading",
            "ExitPass",
            "BalanceDue",
            "BalanceDueWithPaperwork",
            "PackingList"
          ],
          "type": "string"
        },
        "extensionType": {
          "description": "Document Extension Type",
          "enum": [
            "Undefined",
            "Pdf",
            "Txt",
            "Tif",
            "Tiff",
            "Bmp",
            "Dib",
            "Gif",
            "Jpeg",
            "Jpg",
            "Jpe",
            "Jfif",
            "Png",
            "Doc",
            "Docx",
            "Rtf",
            "Mht",
            "Htm",
            "Html",
            "Xml",
            "Zip"
          ],
          "type": "string"
        }
      },
      "example": {
        "loadId": 17513654,
        "document": "",
        "documentType": "BillOfLading",
        "extensionType": "Zip"
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.Load": {
      "description": "Load information",
      "required": ["loadDetail"],
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.Customer",
          "description": "Customer information"
        },
        "loadDetail": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadDetail",
          "description": "Details of the load being submitted"
        }
      },
      "example": {
        "customer": {
          "referenceNumbers": [
            {
              "referenceNumberType": "ShipmentNumber",
              "referenceNumberValue": "123456"
            }
          ]
        },
        "loadDetail": {
          "mode": "TL",
          "equipmentType": "V",
          "equipmentLength": 53,
          "requirements": [
            { "requirementType": "Guaranteed", "requirementValue": "true" }
          ],
          "equipmentRequirements": [
            { "requirementType": "LiftGate", "requirementValue": "true" },
            { "requirementType": "XLoadBars", "requirementValue": "6" }
          ],
          "stops": [
            {
              "sequence": 1,
              "stopType": "Pickup",
              "facility": {
                "name": "Pick Up Facility",
                "address": {
                  "line1": "123 Main St.",
                  "line2": null,
                  "line3": null,
                  "postalCode": "60647",
                  "cityName": "Chicago",
                  "stateProvinceCode": "IL",
                  "countryCode": "US"
                },
                "geoCoordinates": null
              },
              "stopRequirements": [
                {
                  "requirementType": "DropTrailerAllowXHoursToUnload",
                  "requirementValue": "5"
                },
                { "requirementType": "Inside", "requirementValue": "true" }
              ],
              "openDateTimeUtc": "2020-06-03T08:00:00Z",
              "closeDateTimeUtc": "2020-06-03T18:00:00Z",
              "appointmentStartDateTimeUtc": "2020-06-03T10:00:00Z",
              "appointmentEndDateTimeUtc": "2020-06-03T12:00:00Z",
              "referenceNumbers": ["ABC1234", "123467", "ABCXYZ"],
              "stopNotes": "Sample instructions"
            },
            {
              "sequence": 2,
              "stopType": "Delivery",
              "facility": {
                "name": "Drop Off Facility",
                "address": {
                  "line1": "123 Downers St.",
                  "line2": null,
                  "line3": null,
                  "postalCode": "50313",
                  "cityName": "Madison",
                  "stateProvinceCode": "WI",
                  "countryCode": "US"
                },
                "geoCoordinates": null
              },
              "stopRequirements": [
                {
                  "requirementType": "DropTrailerAllowXHoursToUnload",
                  "requirementValue": "5"
                },
                { "requirementType": "Inside", "requirementValue": "true" }
              ],
              "openDateTimeUtc": "2020-06-05T08:00:00Z",
              "closeDateTimeUtc": "2020-06-05T18:00:00Z",
              "appointmentStartDateTimeUtc": "2020-06-05T10:00:00Z",
              "appointmentEndDateTimeUtc": "2020-06-05T12:00:00Z",
              "referenceNumbers": null,
              "stopNotes": null
            }
          ],
          "commodities": [
            {
              "description": "Packages",
              "poNumber": null,
              "packagingType": "Pallet",
              "quantity": 100,
              "palletCount": 5,
              "weightUnit": "Pounds",
              "weight": 500.0,
              "lengthUnit": "Inches",
              "length": 100.0,
              "height": 50.0,
              "width": 100.0,
              "freightClass": null,
              "nmfcNumber": null,
              "nmfcSubNumber": null,
              "cargoValue": 1000.0,
              "stackable": false,
              "temperatureUnit": null,
              "temperatureSetting": null,
              "preCoolTemperature": 0,
              "minimumTemperature": 0,
              "maximumTemperature": 0,
              "pickUpStopNumber": 1,
              "deliveryStopNumber": 2
            }
          ]
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.Customer": {
      "description": "Customer information",
      "type": "object",
      "properties": {
        "referenceNumbers": {
          "description": "List of reference numbers",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.ReferenceNumber"
          }
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadDetail": {
      "description": "Load Details",
      "required": [
        "mode",
        "equipmentType",
        "equipmentLength",
        "stops",
        "commodities"
      ],
      "type": "object",
      "properties": {
        "mode": {
          "description": "Mode",
          "enum": ["TL", "LTL", "IMDL"],
          "type": "string"
        },
        "equipmentType": {
          "description": "Equipment Type",
          "enum": [
            "V",
            "R",
            "F",
            "VR",
            "C",
            "SD",
            "DF",
            "DD",
            "SS",
            "FT",
            "E",
            "T",
            "B",
            "Z",
            "M",
            "Q",
            "P",
            "CNRU",
            "CPPU",
            "CSXU",
            "EMHU",
            "EMPU",
            "EMWU",
            "EPTY",
            "PACU",
            "W",
            "G",
            "K",
            "DR",
            "H",
            "FWS",
            "BT",
            "ZS",
            "XM",
            "MV",
            "MF",
            "FM",
            "DV",
            "LALL",
            "SDL",
            "A",
            "BL",
            "RC",
            "HS",
            "GM",
            "GS",
            "FS",
            "SDS",
            "RTC",
            "RTB",
            "WFB",
            "PO",
            "DDT",
            "DDB",
            "DDF",
            "SFB",
            "SFC",
            "RBC",
            "FB",
            "FBT",
            "FBX",
            "SKC",
            "LL",
            "LLS",
            "LLX",
            "TKC",
            "TKF",
            "IM",
            "IMF"
          ],
          "type": "string"
        },
        "equipmentLength": {
          "format": "int32",
          "description": "Equipment length",
          "type": "integer"
        },
        "requirements": {
          "description": "Load requirements",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadRequirement"
          }
        },
        "equipmentRequirements": {
          "description": "Load equipment requirements",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadEquipmentRequirement"
          }
        },
        "stops": {
          "description": "List of load stops",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadStop"
          }
        },
        "commodities": {
          "description": "List of commodities",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadCommodity"
          }
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.ReferenceNumber": {
      "description": "Reference Numbers",
      "type": "object",
      "properties": {
        "referenceNumberType": {
          "description": "Reference number type",
          "enum": [
            "Reference",
            "OrderNumber",
            "BillOfLading",
            "CommercialInvoice",
            "MasterBOLNumber",
            "PoNumber",
            "ShipmentNumber"
          ],
          "type": "string"
        },
        "referenceNumberValue": {
          "description": "Reference number value. Can be alphanumeric (50 characters limit)",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadRequirement": {
      "description": "",
      "type": "object",
      "properties": {
        "requirementType": {
          "description": "Load requirement type",
          "enum": [
            "Guaranteed",
            "Team",
            "HazmatEndorsement",
            "TankerEndorsement",
            "Hvhr",
            "HvhrPlus",
            "ProtectFromFreeze",
            "PartialLoad",
            "DoubleBlind",
            "DisasterRelief",
            "TechTrackingRequired",
            "PipOrPep",
            "Neec",
            "OverDimension",
            "CrossBorderMexico",
            "BorderCrossingByCoyote",
            "TransloadByCustomer",
            "SecondaryBorderInspection",
            "Haccp",
            "NoCameraPhonePhotosOfPaperwork"
          ],
          "type": "string"
        },
        "requirementValue": {
          "description": "Requirement value",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadEquipmentRequirement": {
      "description": "Load equipment requirement",
      "type": "object",
      "properties": {
        "requirementType": {
          "description": "Equipment requirement type",
          "enum": [
            "FoodGrade",
            "PaperGrade",
            "LiftGate",
            "PalletJack",
            "AirRide",
            "TrailerXYearsOrNewer",
            "XLoadLocks",
            "XLoadBars",
            "XLoadStraps",
            "ETrack",
            "Chains",
            "NoRollDoor",
            "NoReefer",
            "NoLiftGate",
            "DoubleTrailer",
            "TripleTrailer",
            "LoadOutTrailer",
            "TowAway",
            "LightweightEquipment",
            "ScaleUpToXAmount",
            "TandemSlide",
            "DownloadableReefer",
            "SpaceSaverReefer",
            "TranslucentTop",
            "Duraplate",
            "VentedVan",
            "FunctionalAirChute"
          ],
          "type": "string"
        },
        "requirementValue": {
          "description": "Requirement value",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadStop": {
      "description": "Load stop",
      "required": ["sequence", "stopType", "facility"],
      "type": "object",
      "properties": {
        "sequence": {
          "format": "int32",
          "description": "Stop sequence",
          "type": "integer"
        },
        "stopType": {
          "description": "Stop type",
          "enum": [
            "None",
            "Pickup",
            "Delivery",
            "ContainerDepotOrigin",
            "ContainerDepotTermination",
            "OriginRamp",
            "DestinationRamp",
            "OriginPort",
            "DestinationPort",
            "OriginAirport",
            "DestinationAirport",
            "CrossDock"
          ],
          "type": "string"
        },
        "facility": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Facility",
          "description": "Name of the facility"
        },
        "stopRequirements": {
          "description": "Stop requirements",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadStopRequirement"
          }
        },
        "openDateTimeUtc": {
          "format": "date-time",
          "description": "Facility open date/time in UTC",
          "type": "string"
        },
        "closeDateTimeUtc": {
          "format": "date-time",
          "description": "Facility close date/time in UTC",
          "type": "string"
        },
        "appointmentStartDateTimeUtc": {
          "format": "date-time",
          "description": "Appointment open date/time in UTC",
          "type": "string"
        },
        "appointmentEndDateTimeUtc": {
          "format": "date-time",
          "description": "Appointment close date/time in UTC",
          "type": "string"
        },
        "referenceNumbers": {
          "description": "Reference numbers",
          "uniqueItems": false,
          "type": "array",
          "items": { "type": "string" }
        },
        "stopNotes": {
          "description": "Stop notes - special instructions relevant to stop (2500 characters limit)",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadCommodity": {
      "description": "Commodity",
      "required": [
        "description",
        "packagingType",
        "quantity",
        "weight",
        "cargoValue"
      ],
      "type": "object",
      "properties": {
        "description": { "description": "Item Description", "type": "string" },
        "poNumber": { "description": "PO Number", "type": "string" },
        "packagingType": {
          "description": "Packaging type of the commodity",
          "enum": [
            "NotApplicable",
            "Case",
            "Roll",
            "Box",
            "Sack",
            "Bale",
            "Carton",
            "Coil",
            "Drum",
            "ToteBin",
            "Bag",
            "Bundle",
            "Bulk",
            "DryBulk",
            "LiquidBulk",
            "Barge",
            "Barrel",
            "BasketOrHamper",
            "Beam",
            "Bin",
            "Bobbin",
            "Bottle",
            "BoxWithInnerContainer",
            "Bucket",
            "BulkBag",
            "Cabinet",
            "Cage",
            "Can",
            "CanCase",
            "CarloadRail",
            "Carboy",
            "Cask",
            "Chest",
            "Container",
            "ContainersOfBulkCargo",
            "Core",
            "Cradle",
            "Crate",
            "Cube",
            "Cylinder",
            "DoubleLengthRack",
            "DoubleLengthSkid",
            "DoubleLengthToteBin",
            "DuffleBag",
            "EngineContainer",
            "Envelope",
            "Firkin",
            "Flask",
            "FloBin",
            "ForwardReel",
            "Frame",
            "GarmentsOnHangers",
            "HalfStandardRack",
            "HalfStandardToteBin",
            "Hamper",
            "Jar",
            "Jug",
            "Keg",
            "Kit",
            "KnockdownRack",
            "KnockdownToteBin",
            "Lifts",
            "LinerBagDry",
            "LinerBagLiquid",
            "Loose",
            "Lug",
            "MilitaryVan",
            "MixedTypePack",
            "MultirollPack",
            "MultiwallContainerSecuredToPallet",
            "Noil",
            "OnHangerOrRackInboxes",
            "Overwrap",
            "Package",
            "Pail",
            "Pallet",
            "Pieces",
            "Pims",
            "PipeRack",
            "Platform",
            "PrivateVehicle",
            "Rack",
            "Reel",
            "Skid",
            "Sleeve",
            "SlipSheet",
            "Spool",
            "Tank",
            "ToteCan",
            "Tray",
            "TriwallBox",
            "Truck",
            "Tub",
            "Tube",
            "Unit",
            "VanPack",
            "IntermediateBulkContainers"
          ],
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "description": "Number of units",
          "type": "integer"
        },
        "palletCount": {
          "format": "int32",
          "description": "Number of pallets relevant to commodity item\r\n\r\n**Required for LTL**",
          "type": "integer"
        },
        "weightUnit": {
          "description": "Unit of weight",
          "enum": ["Pounds"],
          "type": "string"
        },
        "weight": {
          "format": "double",
          "description": "Pallet weight in lbs(default) if not specified\r\n\r\n**Required for LTL**",
          "type": "number"
        },
        "lengthUnit": {
          "description": "Unit of Length",
          "enum": ["Inches", "Meters", "Centimeters", "Millimeters", "Feet"],
          "type": "string"
        },
        "length": {
          "format": "double",
          "description": "Pallet length in inches\r\n\r\n**Required for LTL**",
          "type": "number"
        },
        "height": {
          "format": "double",
          "description": "Pallet height in inches\r\n\r\n**Required for LTL**",
          "type": "number"
        },
        "width": {
          "format": "double",
          "description": "Pallet width in inches\r\n\r\n**Required for LTL**",
          "type": "number"
        },
        "freightClass": {
          "description": "Freight Class\r\n\r\n**Required for LTL**",
          "enum": [
            "Undefined",
            "N50",
            "N55",
            "N60",
            "N65",
            "N70",
            "N77PT5",
            "N85",
            "N92PT5",
            "N100",
            "N110",
            "N125",
            "N150",
            "N175",
            "N200",
            "N250",
            "N300",
            "N400",
            "N500"
          ],
          "type": "string"
        },
        "nmfcNumber": {
          "format": "int32",
          "description": "NMFC Number",
          "type": "integer"
        },
        "nmfcSubNumber": {
          "format": "int32",
          "description": "NMFC Sub number",
          "type": "integer"
        },
        "cargoValue": {
          "format": "double",
          "description": "Cargo value",
          "type": "number"
        },
        "stackable": { "description": "Stackable", "type": "boolean" },
        "temperatureUnit": {
          "description": "Units for temparature",
          "enum": ["Fahrenheit", "Celsius"],
          "type": "string"
        },
        "temperatureSetting": {
          "description": "Temperature setting for refrigerated loads",
          "enum": ["Continuous", "Cycle"],
          "type": "string"
        },
        "preCoolTemperature": {
          "format": "int32",
          "description": "PreCool temperature if required",
          "type": "integer"
        },
        "minimumTemperature": {
          "format": "int32",
          "description": "Minimum temperature setting",
          "type": "integer"
        },
        "maximumTemperature": {
          "format": "int32",
          "description": "Maximum temperature setting",
          "type": "integer"
        },
        "pickUpStopNumber": {
          "format": "int32",
          "description": "Pick up stop number for commodity",
          "type": "integer"
        },
        "deliveryStopNumber": {
          "format": "int32",
          "description": "Delivery stop number for commodity",
          "type": "integer"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Facility": {
      "description": "Facility",
      "type": "object",
      "properties": {
        "name": { "description": "Name", "type": "string" },
        "address": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.TrackingAddress",
          "description": "Address"
        },
        "geoCoordinates": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.GeoCoordinates",
          "description": "GeoCoordinates"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadStopRequirement": {
      "description": "Load stop requirement",
      "type": "object",
      "properties": {
        "requirementType": {
          "description": "Stop requirement type",
          "enum": [
            "DropTrailerRequired",
            "DropAndHook",
            "DropTrailerAllowXHoursToUnload",
            "PreloadDropTrailerXHoursInAdvance",
            "DriverAssist",
            "Blind",
            "Government",
            "TWICRequiredNoEscorts",
            "TWIC",
            "EscortOrTWICRequired",
            "UIIA",
            "LiquorPermit",
            "StrictAppt",
            "NoWorkIns",
            "NoEarlyDeliveries",
            "NoSameDayReschedules",
            "XRescheduleFee",
            "XLateFee",
            "ScaleEmpty",
            "ScaleHeavy",
            "XTankOfFuelAtShipper",
            "LoadedToLegalWeight",
            "NotAllowedOnDock",
            "MustCheckinAsCoyote",
            "NoLoadLocksOrStraps",
            "MustSecureLoad",
            "MustProvideAndApplySeal",
            "ExitPass",
            "EnglishSpeaking",
            "SpanishSpeaking",
            "USCitizen",
            "ValidUSCommercialDriversLicenseHardcopy",
            "OnsiteParkingAvailable",
            "OvernightParkingAvailable",
            "LegalScaleOnSite",
            "SecureYard",
            "PetsAllowed",
            "HardHat",
            "SafetyGlasses",
            "EarPlugs",
            "LongPants",
            "LongSleeves",
            "ClosedToeShoes",
            "SteelToeShoes",
            "SafetyVest",
            "NoTankTops",
            "NoAnimalsAllowed",
            "PayLumperWCashTCheck",
            "LumperReceiptRequired",
            "NeedCoyoteApprovalToUseLumperService",
            "PrepaidLumperService",
            "LumperReceiptRequiredWithinXHours",
            "DetentionAfterXHours",
            "NotifyXMinPriorToEnteringDetention",
            "PaperworkSubmittedWithInXTime",
            "TrailerDetentionAfterXDays",
            "NoDetention",
            "InOutTimesWSignature",
            "NoTrailerDetentionOrLayover",
            "DetentionAuthFormRequired",
            "TrailerInspectionFormRequired",
            "Liftgate",
            "Residential",
            "LimitedAccess",
            "SortAndSegregate",
            "Inside",
            "Tradeshow"
          ],
          "type": "string"
        },
        "requirementValue": {
          "description": "Stop requirement value",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.TrackingAddress": {
      "description": "Address",
      "type": "object",
      "properties": {
        "line1": { "description": "Line 1", "type": "string" },
        "line2": { "description": "Line 2", "type": "string" },
        "line3": { "description": "Line 3", "type": "string" },
        "postalCode": { "description": "Postal Code", "type": "string" },
        "cityName": { "description": "City Name", "type": "string" },
        "stateProvinceCode": {
          "description": "State or Province Code",
          "type": "string"
        },
        "countryCode": { "description": "Country Code", "type": "string" }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.GeoCoordinates": {
      "description": "GeoCoordinates",
      "type": "object",
      "properties": {
        "latitude": {
          "format": "double",
          "description": "Latitude",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "description": "Longitude",
          "type": "number"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.LoadBuilding.LoadRequestStatus": {
      "description": "Load status response",
      "type": "object",
      "properties": {
        "loadId": {
          "format": "int32",
          "description": "Coyote Load Id",
          "type": "integer"
        },
        "status": {
          "description": "Build status",
          "enum": ["InProgress", "Completed", "Failed"],
          "type": "string"
        },
        "message": {
          "description": "Success/Failure message",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.LocationStatus": {
      "description": "Location Status",
      "type": "object",
      "properties": {
        "loadId": {
          "format": "int32",
          "description": "Load",
          "type": "integer"
        },
        "address": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Address",
          "description": "Address"
        },
        "geoCoordinates": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.GeoCoordinates",
          "description": "GeoCoordinates"
        },
        "timestamp": {
          "format": "date-time",
          "description": "Timestamp",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Address": {
      "description": "Address",
      "type": "object",
      "properties": {
        "line1": { "description": "Line1", "type": "string" },
        "line2": { "description": "Line2", "type": "string" },
        "city": { "description": "City", "type": "string" },
        "postalCode": { "description": "Postal Code", "type": "string" },
        "state": { "description": "State", "type": "string" },
        "countryCode": { "description": "Country Code", "type": "string" }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Spot.SpotQuoteRequest": {
      "description": "Spot Quote Request",
      "required": [
        "equipmentTypeId",
        "origin",
        "destination",
        "pickUpDateUTC",
        "customerShipmentId"
      ],
      "type": "object",
      "properties": {
        "equipmentTypeId": {
          "description": "Equipment Type (V = Dry Van, R = Reefer)",
          "enum": [
            "V",
            "R",
            "F",
            "VR",
            "C",
            "SD",
            "DF",
            "DD",
            "SS",
            "FT",
            "E",
            "T",
            "B",
            "Z",
            "M",
            "Q",
            "P",
            "CNRU",
            "CPPU",
            "CSXU",
            "EMHU",
            "EMPU",
            "EMWU",
            "EPTY",
            "PACU",
            "W",
            "G",
            "K",
            "DR",
            "H",
            "FWS",
            "BT",
            "ZS",
            "XM",
            "MV",
            "MF",
            "FM",
            "DV",
            "LALL",
            "SDL",
            "A",
            "BL",
            "RC",
            "HS",
            "GM",
            "GS",
            "FS",
            "SDS",
            "RTC",
            "RTB",
            "WFB",
            "PO",
            "DDT",
            "DDB",
            "DDF",
            "SFB",
            "SFC",
            "RBC",
            "FB",
            "FBT",
            "FBX",
            "SKC",
            "LL",
            "LLS",
            "LLX",
            "TKC",
            "TKF",
            "IM",
            "IMF"
          ],
          "type": "string"
        },
        "origin": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.LocationData",
          "description": "Origin"
        },
        "destination": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.LocationData",
          "description": "Destination"
        },
        "pickUpDateUTC": {
          "format": "date-time",
          "description": "Load Pickup Date UTC",
          "type": "string"
        },
        "minTemperature": {
          "format": "double",
          "description": "Minimum Temperature (required if Equipment Type = R)",
          "type": "number"
        },
        "maxTemperature": {
          "format": "double",
          "description": "Maximum Temperature (required if Equipment Type = R)",
          "type": "number"
        },
        "weight": {
          "format": "double",
          "description": "Weight",
          "type": "number"
        },
        "commodity": { "description": "Commodity", "type": "string" },
        "equipmentLength": {
          "format": "double",
          "description": "Equipment Length",
          "type": "number"
        },
        "isHazmat": {
          "description": "Load is Hazmat __(currently unsupported)__",
          "type": "boolean"
        },
        "isDropTrailer": {
          "description": "Load Requires Drop Trailer __(currently unsupported)__",
          "type": "boolean"
        },
        "customerShipmentId": { "description": "Shipment ID", "type": "string" }
      },
      "example": {
        "equipmentTypeId": "V",
        "origin": {
          "cityName": "Chicago",
          "stateCode": "IL",
          "countryCode": "US",
          "postalCode": "60647"
        },
        "destination": {
          "cityName": "Madison",
          "stateCode": "WI",
          "countryCode": "US",
          "postalCode": "53703"
        },
        "pickUpDateUTC": "2020-06-08T19:07:01.5116791Z",
        "minTemperature": null,
        "maxTemperature": null,
        "weight": 100.0,
        "commodity": "Sample Commodity",
        "equipmentLength": 53.0,
        "isHazmat": false,
        "isDropTrailer": false,
        "customerShipmentId": "CUST1234"
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Spot.LocationData": {
      "description": "City, State and Postal Code required",
      "type": "object",
      "properties": {
        "cityName": { "description": "City __(required)__", "type": "string" },
        "stateCode": {
          "description": "State __(required)__",
          "type": "string"
        },
        "countryCode": {
          "description": "Country (optional)",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal Code __(required)__",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Spot.SpotQuote": {
      "description": "SpotQuote",
      "type": "object",
      "properties": {
        "spotQuoteId": {
          "format": "int32",
          "description": "SpotQuoteId",
          "type": "integer"
        },
        "customerShipmentId": {
          "description": "CustomerShipmentId",
          "type": "string"
        },
        "origin": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.LocationData",
          "description": "Origin"
        },
        "destination": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.LocationData",
          "description": "Destination"
        },
        "equipmentTypeId": {
          "description": "EquipmentTypeId",
          "enum": [
            "V",
            "R",
            "F",
            "VR",
            "C",
            "SD",
            "DF",
            "DD",
            "SS",
            "FT",
            "E",
            "T",
            "B",
            "Z",
            "M",
            "Q",
            "P",
            "CNRU",
            "CPPU",
            "CSXU",
            "EMHU",
            "EMPU",
            "EMWU",
            "EPTY",
            "PACU",
            "W",
            "G",
            "K",
            "DR",
            "H",
            "FWS",
            "BT",
            "ZS",
            "XM",
            "MV",
            "MF",
            "FM",
            "DV",
            "LALL",
            "SDL",
            "A",
            "BL",
            "RC",
            "HS",
            "GM",
            "GS",
            "FS",
            "SDS",
            "RTC",
            "RTB",
            "WFB",
            "PO",
            "DDT",
            "DDB",
            "DDF",
            "SFB",
            "SFC",
            "RBC",
            "FB",
            "FBT",
            "FBX",
            "SKC",
            "LL",
            "LLS",
            "LLX",
            "TKC",
            "TKF",
            "IM",
            "IMF"
          ],
          "type": "string"
        },
        "pickUpDateUTC": {
          "format": "date-time",
          "description": "PickupDateUTC",
          "type": "string"
        },
        "validUntilUtc": {
          "format": "date-time",
          "description": "ValidUntilUtc",
          "type": "string"
        },
        "totalRate": {
          "format": "double",
          "description": "TotalRate\r\n__Total rate includes fuel__",
          "type": "number"
        },
        "rateLineItems": {
          "description": "List of rate items that make up the total rate for this quote",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.RateItem"
          }
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Spot.RateItem": {
      "description": "Rate line item that make up the quote",
      "type": "object",
      "properties": {
        "rateCode": {
          "description": "Rate code used by Coyote\r\n\r\n`FR` - **Flat Rate or Line Haul** \r\n`405` - **Fuel Surcharge**",
          "enum": ["FR", "405", "PM"],
          "type": "string"
        },
        "description": {
          "description": "Rate code description",
          "type": "string"
        },
        "unitRate": {
          "format": "double",
          "description": "Unit amount of the rate line item.",
          "type": "number"
        },
        "units": {
          "format": "double",
          "description": "Number of Units",
          "type": "number"
        },
        "totalRate": {
          "format": "double",
          "description": "Total amount of the rate line item.",
          "type": "number"
        },
        "currency": {
          "description": "Currency type",
          "enum": ["USD", "CAD"],
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Spot.LTLSpotQuoteRequest": {
      "description": "LTL Rate Request",
      "required": [
        "origin",
        "pickupDate",
        "destination",
        "equipmentType",
        "commodities"
      ],
      "type": "object",
      "properties": {
        "origin": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.LocationData",
          "description": "Origin"
        },
        "pickupDate": {
          "format": "date-time",
          "description": "Shipment Pickup Date",
          "type": "string"
        },
        "originRequirements": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.OriginRequirements",
          "description": "Origin Requirements"
        },
        "destination": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.LocationData",
          "description": "Destination"
        },
        "destinationRequirements": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.DestinationRequirements",
          "description": "Destination Requirements"
        },
        "equipmentType": {
          "description": "Equipment Type (V=Dry Van)\r\nValid value: \"V\"",
          "enum": [
            "V",
            "R",
            "F",
            "VR",
            "C",
            "SD",
            "DF",
            "DD",
            "SS",
            "FT",
            "E",
            "T",
            "B",
            "Z",
            "M",
            "Q",
            "P",
            "CNRU",
            "CPPU",
            "CSXU",
            "EMHU",
            "EMPU",
            "EMWU",
            "EPTY",
            "PACU",
            "W",
            "G",
            "K",
            "DR",
            "H",
            "FWS",
            "BT",
            "ZS",
            "XM",
            "MV",
            "MF",
            "FM",
            "DV",
            "LALL",
            "SDL",
            "A",
            "BL",
            "RC",
            "HS",
            "GM",
            "GS",
            "FS",
            "SDS",
            "RTC",
            "RTB",
            "WFB",
            "PO",
            "DDT",
            "DDB",
            "DDF",
            "SFB",
            "SFC",
            "RBC",
            "FB",
            "FBT",
            "FBX",
            "SKC",
            "LL",
            "LLS",
            "LLX",
            "TKC",
            "TKF",
            "IM",
            "IMF"
          ],
          "type": "string"
        },
        "commodities": {
          "description": "Commodities",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.Commodity"
          }
        },
        "guaranteedShipment": {
          "description": "Guaranteed Shipment",
          "type": "boolean"
        }
      },
      "example": {
        "origin": {
          "cityName": "Chicago",
          "stateCode": "IL",
          "countryCode": "US",
          "postalCode": "60647"
        },
        "pickupDate": "2020-06-04T14:07:01.5210886-05:00",
        "originRequirements": {
          "insideStop": false,
          "residentialStop": false,
          "tradeshowStop": false,
          "liftGateStop": false,
          "sortSegregate": false,
          "limitedAccessType": 0
        },
        "destination": {
          "cityName": "Madison",
          "stateCode": "WI",
          "countryCode": "US",
          "postalCode": "50515"
        },
        "destinationRequirements": {
          "insideStop": false,
          "residentialStop": false,
          "tradeshowStop": false,
          "liftGateStop": false,
          "sortSegregate": false,
          "limitedAccessType": 0,
          "appointmentRequired": false
        },
        "equipmentType": "V",
        "commodities": [
          {
            "description": "Sample Commodity",
            "palletCount": 5,
            "freightClass": 9,
            "weight": 100.0,
            "length": 75.0,
            "height": 50.0,
            "width": 50.0,
            "isHazmat": false,
            "nmfcNumber": null,
            "nmfcSubNumber": null
          }
        ],
        "guaranteedShipment": false
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Spot.OriginRequirements": {
      "description": "Origin stop requirements",
      "type": "object",
      "properties": {
        "insideStop": {
          "description": "Stop requires Inside Pickup or Delivery",
          "type": "boolean"
        },
        "residentialStop": {
          "description": "Residential Stop",
          "type": "boolean"
        },
        "tradeshowStop": {
          "description": "Trade show Stop",
          "type": "boolean"
        },
        "liftGateStop": {
          "description": "Stop requires Lift Gate",
          "type": "boolean"
        },
        "sortSegregate": {
          "description": "Stop requires Sort and Segregate",
          "type": "boolean"
        },
        "limitedAccessType": {
          "description": "Stop is Limited Access Type",
          "enum": [
            "Undefined",
            "Church",
            "ConstructionSite",
            "MilitaryBase",
            "MineSite",
            "MiniStorage",
            "RemoteGovtDelivery",
            "School",
            "Other"
          ],
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Spot.DestinationRequirements": {
      "description": "Destination stop requirements",
      "type": "object",
      "properties": {
        "insideStop": {
          "description": "Stop requires Inside Pickup or Delivery",
          "type": "boolean"
        },
        "residentialStop": {
          "description": "Residential Stop",
          "type": "boolean"
        },
        "tradeshowStop": {
          "description": "Trade show Stop",
          "type": "boolean"
        },
        "liftGateStop": {
          "description": "Stop requires Lift Gate",
          "type": "boolean"
        },
        "sortSegregate": {
          "description": "Stop requires Sort and Segregate",
          "type": "boolean"
        },
        "limitedAccessType": {
          "description": "Stop is Limited Access Type",
          "enum": [
            "Undefined",
            "Church",
            "ConstructionSite",
            "MilitaryBase",
            "MineSite",
            "MiniStorage",
            "RemoteGovtDelivery",
            "School",
            "Other"
          ],
          "type": "string"
        },
        "appointmentRequired": {
          "description": "Appointment Required",
          "type": "boolean"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Spot.Commodity": {
      "description": "Commodity",
      "required": [
        "palletCount",
        "freightClass",
        "weight",
        "length",
        "height",
        "width"
      ],
      "type": "object",
      "properties": {
        "description": { "description": "Item Description", "type": "string" },
        "palletCount": {
          "format": "int32",
          "description": "Number of pallets relevant to commodity item",
          "type": "integer"
        },
        "freightClass": {
          "description": "Freight Class",
          "enum": [
            "Undefined",
            "N50",
            "N55",
            "N60",
            "N65",
            "N70",
            "N77PT5",
            "N85",
            "N92PT5",
            "N100",
            "N110",
            "N125",
            "N150",
            "N175",
            "N200",
            "N250",
            "N300",
            "N400",
            "N500"
          ],
          "type": "string"
        },
        "weight": {
          "format": "double",
          "description": "Pallet weight in lbs",
          "type": "number"
        },
        "length": {
          "format": "double",
          "description": "Pallet length in inches",
          "type": "number"
        },
        "height": {
          "format": "double",
          "description": "Pallet height in inches",
          "type": "number"
        },
        "width": {
          "format": "double",
          "description": "Pallet width in inches",
          "type": "number"
        },
        "isHazmat": { "description": "Is Hazmat Commodity", "type": "boolean" },
        "nmfcNumber": {
          "format": "int32",
          "description": "NMFC Number",
          "type": "integer"
        },
        "nmfcSubNumber": {
          "format": "int32",
          "description": "NMFC Sub",
          "type": "integer"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Spot.LTLSpotQuote": {
      "description": "LTL Rate Response",
      "type": "object",
      "properties": {
        "ltlSpotQuoteId": {
          "description": "LTL Spot Quote request Id",
          "type": "string"
        },
        "carrierQuotes": {
          "description": "Carrier Quotes",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Spot.CarrierQuote"
          }
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Spot.CarrierQuote": {
      "description": "Carrier Quote",
      "type": "object",
      "properties": {
        "quoteID": {
          "description": "Unique identifier to the quote based on carrier",
          "type": "string"
        },
        "carrierName": {
          "description": "Name of the carrier",
          "type": "string"
        },
        "totalRate": {
          "format": "double",
          "description": "Total rate includes fuel and accessorial services",
          "type": "number"
        },
        "currencyType": {
          "description": "Currency of provided rate",
          "enum": [
            "Undefined",
            "USD",
            "CAD",
            "MXN",
            "ARS",
            "BRL",
            "CLP",
            "COP",
            "VEF",
            "EUR",
            "GBP",
            "HUF",
            "PLN"
          ],
          "type": "string"
        },
        "transitTime": {
          "format": "int32",
          "description": "Expected days of transit according to specific carrier",
          "type": "integer"
        },
        "interline": {
          "description": "If lane serviced by carrier is Direct or Indirect",
          "type": "string"
        },
        "deliveryDate": {
          "format": "date-time",
          "description": "Expected delivery date for shipment\r\nWeekends and holidays are excluded",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.StopDetail": {
      "description": "Stop Detail",
      "type": "object",
      "properties": {
        "loadStops": {
          "description": "Load Stops",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.LoadStopProgress"
          }
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.LoadStopProgress": {
      "description": "Load Stop",
      "type": "object",
      "properties": {
        "sequence": {
          "format": "int32",
          "description": "Sequence",
          "type": "integer"
        },
        "stopType": {
          "description": "Stop Type",
          "enum": [
            "None",
            "Pickup",
            "Delivery",
            "ContainerDepotOrigin",
            "ContainerDepotTermination",
            "OriginRamp",
            "DestinationRamp",
            "OriginPort",
            "DestinationPort",
            "OriginAirport",
            "DestinationAirport",
            "CrossDock"
          ],
          "type": "string"
        },
        "facility": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Facility",
          "description": "Facility"
        },
        "appointment": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Appointment",
          "description": "Appointment"
        },
        "milestone": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Milestone",
          "description": "Milestone"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Appointment": {
      "description": "Appointment",
      "type": "object",
      "properties": {
        "facilityOpenDateTimeUtc": {
          "format": "date-time",
          "description": "Facility Open DateTime in Utc",
          "type": "string"
        },
        "facilityCloseDateTimeUtc": {
          "format": "date-time",
          "description": "Facility Close DateTime in Utc",
          "type": "string"
        },
        "appointmentStartDateTimeUtc": {
          "format": "date-time",
          "description": "Appointment Start DateTime in Utc",
          "type": "string"
        },
        "appointmentEndDateTimeUtc": {
          "format": "date-time",
          "description": "Appointment End DateTime in Utc",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Milestone": {
      "description": "Milestone",
      "type": "object",
      "properties": {
        "driverArrivalDateTimeUtc": {
          "format": "date-time",
          "description": "Driver Arrival DateTime in Utc",
          "type": "string"
        },
        "trailerArriveDateTimeUtc": {
          "format": "date-time",
          "description": "Trailer Arrive DateTime in Utc",
          "type": "string"
        },
        "trailerLoadedDateTimeUtc": {
          "format": "date-time",
          "description": "Trailer Loaded DateTime in Utc",
          "type": "string"
        },
        "trailerEmptyDateTimeUtc": {
          "format": "date-time",
          "description": "Trailer Empty DateTime in Utc",
          "type": "string"
        },
        "driverDepartureDateTimeUtc": {
          "format": "date-time",
          "description": "Driver Departure DateTime in Utc",
          "type": "string"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Summary": {
      "description": "Summary",
      "type": "object",
      "properties": {
        "latestLocationStatus": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Location",
          "description": "Latest Location Status"
        },
        "nextStop": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.LoadStop",
          "description": "Next Stop"
        },
        "estimatedArrivalDateTimeUtc": {
          "format": "date-time",
          "description": "ETA DateTime in Utc __(currently unsupported)__",
          "type": "string"
        },
        "nextStopDistance": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Distance",
          "description": "Distance to Next Stop __(currently unsupported)__"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Location": {
      "description": "Location",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.TrackingAddress",
          "description": "Address"
        },
        "timestampUtc": {
          "format": "date-time",
          "description": "Timestamp in Utc",
          "type": "string"
        },
        "geoCoordinates": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.GeoCoordinates",
          "description": "GeoCoordinates"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.LoadStop": {
      "description": "Load Stop",
      "type": "object",
      "properties": {
        "sequence": {
          "format": "int32",
          "description": "Sequence",
          "type": "integer"
        },
        "stopType": {
          "description": "Stop Type",
          "enum": [
            "None",
            "Pickup",
            "Delivery",
            "ContainerDepotOrigin",
            "ContainerDepotTermination",
            "OriginRamp",
            "DestinationRamp",
            "OriginPort",
            "DestinationPort",
            "OriginAirport",
            "DestinationAirport",
            "CrossDock"
          ],
          "type": "string"
        },
        "facility": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Facility",
          "description": "Facility"
        },
        "appointment": {
          "$ref": "#/definitions/Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Appointment",
          "description": "Appointment"
        }
      }
    },
    "Coyote.Systems.ExternalApi.Contracts.Models.Tracking.Distance": {
      "description": "Distance to Next Stop __(currently unsupported)__",
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "description": "Value",
          "type": "number"
        },
        "unit": {
          "description": "Unit",
          "enum": ["Miles", "Kilometers"],
          "type": "string"
        }
      }
    }
  },
  "x-servers": [
    { "url": "https://api.coyote.com", "description": "Production" },
    { "url": "https://api-sandbox.coyote.com", "description": "Sandbox" }
  ]
}
